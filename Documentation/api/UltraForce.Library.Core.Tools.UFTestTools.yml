### YamlMime:ManagedReference
items:
- uid: UltraForce.Library.Core.Tools.UFTestTools
  commentId: T:UltraForce.Library.Core.Tools.UFTestTools
  id: UFTestTools
  parent: UltraForce.Library.Core.Tools
  children:
  - UltraForce.Library.Core.Tools.UFTestTools.AssertEqualList``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{System.String})
  - UltraForce.Library.Core.Tools.UFTestTools.AssertEqualList``2(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,System.Boolean})
  - UltraForce.Library.Core.Tools.UFTestTools.AssertEqualProperties``1(``0,``0,System.Collections.Generic.IEnumerable{System.String})
  - UltraForce.Library.Core.Tools.UFTestTools.HasUniqueValues``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  langs:
  - csharp
  - vb
  name: UFTestTools
  nameWithType: UFTestTools
  fullName: UltraForce.Library.Core.Tools.UFTestTools
  type: Class
  source:
    remote:
      path: UltraForce.Library.Core/Tools/UFTestTools.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.Core.git
    id: UFTestTools
    path: ../UltraForce.Library.Core/Tools/UFTestTools.cs
    startLine: 37
  assemblies:
  - UltraForce.Library.Core
  namespace: UltraForce.Library.Core.Tools
  summary: THis class contains static methods to support unit testing with xUnit.
  example: []
  syntax:
    content: public static class UFTestTools
    content.vb: Public Module UFTestTools
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: UltraForce.Library.Core.Tools.UFTestTools.HasUniqueValues``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  commentId: M:UltraForce.Library.Core.Tools.UFTestTools.HasUniqueValues``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  id: HasUniqueValues``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  parent: UltraForce.Library.Core.Tools.UFTestTools
  langs:
  - csharp
  - vb
  name: HasUniqueValues<TObject, TValue>(IEnumerable<TObject>, Func<TObject, TValue>)
  nameWithType: UFTestTools.HasUniqueValues<TObject, TValue>(IEnumerable<TObject>, Func<TObject, TValue>)
  fullName: UltraForce.Library.Core.Tools.UFTestTools.HasUniqueValues<TObject, TValue>(System.Collections.Generic.IEnumerable<TObject>, System.Func<TObject, TValue>)
  type: Method
  source:
    remote:
      path: UltraForce.Library.Core/Tools/UFTestTools.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.Core.git
    id: HasUniqueValues
    path: ../UltraForce.Library.Core/Tools/UFTestTools.cs
    startLine: 47
  assemblies:
  - UltraForce.Library.Core
  namespace: UltraForce.Library.Core.Tools
  summary: Checks if a list of items has unique values for a certain property.
  example: []
  syntax:
    content: 'public static void HasUniqueValues<TObject, TValue>(IEnumerable<TObject> aList, Func<TObject, TValue> aGetValue) where TValue : IEquatable<TValue>'
    parameters:
    - id: aList
      type: System.Collections.Generic.IEnumerable{{TObject}}
      description: List to check
    - id: aGetValue
      type: System.Func{{TObject},{TValue}}
      description: A function to get the value
    typeParameters:
    - id: TObject
      description: Object to get value from
    - id: TValue
      description: Value type
    content.vb: Public Shared Sub HasUniqueValues(Of TObject, TValue As IEquatable(Of TValue))(aList As IEnumerable(Of TObject), aGetValue As Func(Of TObject, TValue))
  overload: UltraForce.Library.Core.Tools.UFTestTools.HasUniqueValues*
  nameWithType.vb: UFTestTools.HasUniqueValues(Of TObject, TValue)(IEnumerable(Of TObject), Func(Of TObject, TValue))
  fullName.vb: UltraForce.Library.Core.Tools.UFTestTools.HasUniqueValues(Of TObject, TValue)(System.Collections.Generic.IEnumerable(Of TObject), System.Func(Of TObject, TValue))
  name.vb: HasUniqueValues(Of TObject, TValue)(IEnumerable(Of TObject), Func(Of TObject, TValue))
- uid: UltraForce.Library.Core.Tools.UFTestTools.AssertEqualProperties``1(``0,``0,System.Collections.Generic.IEnumerable{System.String})
  commentId: M:UltraForce.Library.Core.Tools.UFTestTools.AssertEqualProperties``1(``0,``0,System.Collections.Generic.IEnumerable{System.String})
  id: AssertEqualProperties``1(``0,``0,System.Collections.Generic.IEnumerable{System.String})
  parent: UltraForce.Library.Core.Tools.UFTestTools
  langs:
  - csharp
  - vb
  name: AssertEqualProperties<T>(T, T, IEnumerable<string>?)
  nameWithType: UFTestTools.AssertEqualProperties<T>(T, T, IEnumerable<string>?)
  fullName: UltraForce.Library.Core.Tools.UFTestTools.AssertEqualProperties<T>(T, T, System.Collections.Generic.IEnumerable<string>?)
  type: Method
  source:
    remote:
      path: UltraForce.Library.Core/Tools/UFTestTools.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.Core.git
    id: AssertEqualProperties
    path: ../UltraForce.Library.Core/Tools/UFTestTools.cs
    startLine: 70
  assemblies:
  - UltraForce.Library.Core
  namespace: UltraForce.Library.Core.Tools
  summary: Checks if all properties are the same.
  example: []
  syntax:
    content: public static void AssertEqualProperties<T>(T anExpected, T anActual, IEnumerable<string>? aNotEqualProperties = null)
    parameters:
    - id: anExpected
      type: '{T}'
      description: ''
    - id: anActual
      type: '{T}'
      description: ''
    - id: aNotEqualProperties
      type: System.Collections.Generic.IEnumerable{System.String}
      description: ''
    typeParameters:
    - id: T
      description: ''
    content.vb: Public Shared Sub AssertEqualProperties(Of T)(anExpected As T, anActual As T, aNotEqualProperties As IEnumerable(Of String) = Nothing)
  overload: UltraForce.Library.Core.Tools.UFTestTools.AssertEqualProperties*
  nameWithType.vb: UFTestTools.AssertEqualProperties(Of T)(T, T, IEnumerable(Of String))
  fullName.vb: UltraForce.Library.Core.Tools.UFTestTools.AssertEqualProperties(Of T)(T, T, System.Collections.Generic.IEnumerable(Of String))
  name.vb: AssertEqualProperties(Of T)(T, T, IEnumerable(Of String))
- uid: UltraForce.Library.Core.Tools.UFTestTools.AssertEqualList``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{System.String})
  commentId: M:UltraForce.Library.Core.Tools.UFTestTools.AssertEqualList``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{System.String})
  id: AssertEqualList``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{System.String})
  parent: UltraForce.Library.Core.Tools.UFTestTools
  langs:
  - csharp
  - vb
  name: AssertEqualList<T>(IEnumerable<T>, IEnumerable<T>, IEnumerable<string>?)
  nameWithType: UFTestTools.AssertEqualList<T>(IEnumerable<T>, IEnumerable<T>, IEnumerable<string>?)
  fullName: UltraForce.Library.Core.Tools.UFTestTools.AssertEqualList<T>(System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<string>?)
  type: Method
  source:
    remote:
      path: UltraForce.Library.Core/Tools/UFTestTools.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.Core.git
    id: AssertEqualList
    path: ../UltraForce.Library.Core/Tools/UFTestTools.cs
    startLine: 91
  assemblies:
  - UltraForce.Library.Core
  namespace: UltraForce.Library.Core.Tools
  summary: >-
    Checks if a list contains all the items (and not more) of an another list. The method succeeds

    if the size are equal and all items are found within the list. The method does not look at

    the order of the items.
  example: []
  syntax:
    content: public static void AssertEqualList<T>(IEnumerable<T> anExpectedList, IEnumerable<T> anActualList, IEnumerable<string>? aNotEqualProperties = null)
    parameters:
    - id: anExpectedList
      type: System.Collections.Generic.IEnumerable{{T}}
      description: ''
    - id: anActualList
      type: System.Collections.Generic.IEnumerable{{T}}
      description: ''
    - id: aNotEqualProperties
      type: System.Collections.Generic.IEnumerable{System.String}
      description: ''
    typeParameters:
    - id: T
      description: ''
    content.vb: Public Shared Sub AssertEqualList(Of T)(anExpectedList As IEnumerable(Of T), anActualList As IEnumerable(Of T), aNotEqualProperties As IEnumerable(Of String) = Nothing)
  overload: UltraForce.Library.Core.Tools.UFTestTools.AssertEqualList*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: When an item can not be found or lists are not equal in size
  nameWithType.vb: UFTestTools.AssertEqualList(Of T)(IEnumerable(Of T), IEnumerable(Of T), IEnumerable(Of String))
  fullName.vb: UltraForce.Library.Core.Tools.UFTestTools.AssertEqualList(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IEnumerable(Of String))
  name.vb: AssertEqualList(Of T)(IEnumerable(Of T), IEnumerable(Of T), IEnumerable(Of String))
- uid: UltraForce.Library.Core.Tools.UFTestTools.AssertEqualList``2(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,System.Boolean})
  commentId: M:UltraForce.Library.Core.Tools.UFTestTools.AssertEqualList``2(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,System.Boolean})
  id: AssertEqualList``2(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,System.Boolean})
  parent: UltraForce.Library.Core.Tools.UFTestTools
  langs:
  - csharp
  - vb
  name: AssertEqualList<TFirst, TSecond>(IEnumerable<TFirst>, IEnumerable<TSecond>, Func<TFirst, TSecond, bool>)
  nameWithType: UFTestTools.AssertEqualList<TFirst, TSecond>(IEnumerable<TFirst>, IEnumerable<TSecond>, Func<TFirst, TSecond, bool>)
  fullName: UltraForce.Library.Core.Tools.UFTestTools.AssertEqualList<TFirst, TSecond>(System.Collections.Generic.IEnumerable<TFirst>, System.Collections.Generic.IEnumerable<TSecond>, System.Func<TFirst, TSecond, bool>)
  type: Method
  source:
    remote:
      path: UltraForce.Library.Core/Tools/UFTestTools.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.Core.git
    id: AssertEqualList
    path: ../UltraForce.Library.Core/Tools/UFTestTools.cs
    startLine: 118
  assemblies:
  - UltraForce.Library.Core
  namespace: UltraForce.Library.Core.Tools
  summary: >-
    Checks if a list contains all the items (and not more) of an another list. The method succeeds

    if the size are equal and all items are found within the list.
  example: []
  syntax:
    content: public static void AssertEqualList<TFirst, TSecond>(IEnumerable<TFirst> anExpectedList, IEnumerable<TSecond> anActualList, Func<TFirst, TSecond, bool> aComparer)
    parameters:
    - id: anExpectedList
      type: System.Collections.Generic.IEnumerable{{TFirst}}
      description: ''
    - id: anActualList
      type: System.Collections.Generic.IEnumerable{{TSecond}}
      description: ''
    - id: aComparer
      type: System.Func{{TFirst},{TSecond},System.Boolean}
      description: ''
    typeParameters:
    - id: TFirst
      description: ''
    - id: TSecond
      description: ''
    content.vb: Public Shared Sub AssertEqualList(Of TFirst, TSecond)(anExpectedList As IEnumerable(Of TFirst), anActualList As IEnumerable(Of TSecond), aComparer As Func(Of TFirst, TSecond, Boolean))
  overload: UltraForce.Library.Core.Tools.UFTestTools.AssertEqualList*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: When an item can not be found or lists are not equal in size
  nameWithType.vb: UFTestTools.AssertEqualList(Of TFirst, TSecond)(IEnumerable(Of TFirst), IEnumerable(Of TSecond), Func(Of TFirst, TSecond, Boolean))
  fullName.vb: UltraForce.Library.Core.Tools.UFTestTools.AssertEqualList(Of TFirst, TSecond)(System.Collections.Generic.IEnumerable(Of TFirst), System.Collections.Generic.IEnumerable(Of TSecond), System.Func(Of TFirst, TSecond, Boolean))
  name.vb: AssertEqualList(Of TFirst, TSecond)(IEnumerable(Of TFirst), IEnumerable(Of TSecond), Func(Of TFirst, TSecond, Boolean))
references:
- uid: UltraForce.Library.Core.Tools
  commentId: N:UltraForce.Library.Core.Tools
  href: UltraForce.html
  name: UltraForce.Library.Core.Tools
  nameWithType: UltraForce.Library.Core.Tools
  fullName: UltraForce.Library.Core.Tools
  spec.csharp:
  - uid: UltraForce
    name: UltraForce
    href: UltraForce.html
  - name: .
  - uid: UltraForce.Library
    name: Library
    href: UltraForce.Library.html
  - name: .
  - uid: UltraForce.Library.Core
    name: Core
    href: UltraForce.Library.Core.html
  - name: .
  - uid: UltraForce.Library.Core.Tools
    name: Tools
    href: UltraForce.Library.Core.Tools.html
  spec.vb:
  - uid: UltraForce
    name: UltraForce
    href: UltraForce.html
  - name: .
  - uid: UltraForce.Library
    name: Library
    href: UltraForce.Library.html
  - name: .
  - uid: UltraForce.Library.Core
    name: Core
    href: UltraForce.Library.Core.html
  - name: .
  - uid: UltraForce.Library.Core.Tools
    name: Tools
    href: UltraForce.Library.Core.Tools.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: UltraForce.Library.Core.Tools.UFTestTools.HasUniqueValues*
  commentId: Overload:UltraForce.Library.Core.Tools.UFTestTools.HasUniqueValues
  href: UltraForce.Library.Core.Tools.UFTestTools.html#UltraForce_Library_Core_Tools_UFTestTools_HasUniqueValues__2_System_Collections_Generic_IEnumerable___0__System_Func___0___1__
  name: HasUniqueValues
  nameWithType: UFTestTools.HasUniqueValues
  fullName: UltraForce.Library.Core.Tools.UFTestTools.HasUniqueValues
- uid: System.Collections.Generic.IEnumerable{{TObject}}
  commentId: T:System.Collections.Generic.IEnumerable{``0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<TObject>
  nameWithType: IEnumerable<TObject>
  fullName: System.Collections.Generic.IEnumerable<TObject>
  nameWithType.vb: IEnumerable(Of TObject)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TObject)
  name.vb: IEnumerable(Of TObject)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TObject
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TObject
  - name: )
- uid: System.Func{{TObject},{TValue}}
  commentId: T:System.Func{``0,``1}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<TObject, TValue>
  nameWithType: Func<TObject, TValue>
  fullName: System.Func<TObject, TValue>
  nameWithType.vb: Func(Of TObject, TValue)
  fullName.vb: System.Func(Of TObject, TValue)
  name.vb: Func(Of TObject, TValue)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TObject
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TObject
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: UltraForce.Library.Core.Tools.UFTestTools.AssertEqualProperties*
  commentId: Overload:UltraForce.Library.Core.Tools.UFTestTools.AssertEqualProperties
  href: UltraForce.Library.Core.Tools.UFTestTools.html#UltraForce_Library_Core_Tools_UFTestTools_AssertEqualProperties__1___0___0_System_Collections_Generic_IEnumerable_System_String__
  name: AssertEqualProperties
  nameWithType: UFTestTools.AssertEqualProperties
  fullName: UltraForce.Library.Core.Tools.UFTestTools.AssertEqualProperties
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<string>
  nameWithType: IEnumerable<string>
  fullName: System.Collections.Generic.IEnumerable<string>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Exception
  commentId: T:System.Exception
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.exception
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: UltraForce.Library.Core.Tools.UFTestTools.AssertEqualList*
  commentId: Overload:UltraForce.Library.Core.Tools.UFTestTools.AssertEqualList
  href: UltraForce.Library.Core.Tools.UFTestTools.html#UltraForce_Library_Core_Tools_UFTestTools_AssertEqualList__1_System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IEnumerable_System_String__
  name: AssertEqualList
  nameWithType: UFTestTools.AssertEqualList
  fullName: UltraForce.Library.Core.Tools.UFTestTools.AssertEqualList
- uid: System.Collections.Generic.IEnumerable{{T}}
  commentId: T:System.Collections.Generic.IEnumerable{``0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IEnumerable{{TFirst}}
  commentId: T:System.Collections.Generic.IEnumerable{``0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<TFirst>
  nameWithType: IEnumerable<TFirst>
  fullName: System.Collections.Generic.IEnumerable<TFirst>
  nameWithType.vb: IEnumerable(Of TFirst)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TFirst)
  name.vb: IEnumerable(Of TFirst)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TFirst
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TFirst
  - name: )
- uid: System.Collections.Generic.IEnumerable{{TSecond}}
  commentId: T:System.Collections.Generic.IEnumerable{``1}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<TSecond>
  nameWithType: IEnumerable<TSecond>
  fullName: System.Collections.Generic.IEnumerable<TSecond>
  nameWithType.vb: IEnumerable(Of TSecond)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TSecond)
  name.vb: IEnumerable(Of TSecond)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TSecond
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TSecond
  - name: )
- uid: System.Func{{TFirst},{TSecond},System.Boolean}
  commentId: T:System.Func{``0,``1,System.Boolean}
  parent: System
  definition: System.Func`3
  href: https://learn.microsoft.com/dotnet/api/system.func-3
  name: Func<TFirst, TSecond, bool>
  nameWithType: Func<TFirst, TSecond, bool>
  fullName: System.Func<TFirst, TSecond, bool>
  nameWithType.vb: Func(Of TFirst, TSecond, Boolean)
  fullName.vb: System.Func(Of TFirst, TSecond, Boolean)
  name.vb: Func(Of TFirst, TSecond, Boolean)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - name: TFirst
  - name: ','
  - name: " "
  - name: TSecond
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - name: TFirst
  - name: ','
  - name: " "
  - name: TSecond
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Func`3
  commentId: T:System.Func`3
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-3
  name: Func<T1, T2, TResult>
  nameWithType: Func<T1, T2, TResult>
  fullName: System.Func<T1, T2, TResult>
  nameWithType.vb: Func(Of T1, T2, TResult)
  fullName.vb: System.Func(Of T1, T2, TResult)
  name.vb: Func(Of T1, T2, TResult)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: TResult
  - name: )
